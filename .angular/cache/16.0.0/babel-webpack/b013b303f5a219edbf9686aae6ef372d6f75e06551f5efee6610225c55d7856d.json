{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { EventEmitter, PLATFORM_ID, Directive, Inject, Input, Output, HostListener, NgModule } from '@angular/core';\nimport { isPlatformBrowser, isPlatformServer } from '@angular/common';\n\n// tslint:disable-next-line:max-line-length\nlet FullpageDirective = /*#__PURE__*/(() => {\n  class FullpageDirective {\n    platformId;\n    renderer;\n    id;\n    options;\n    ref = new EventEmitter();\n    fullpageApi;\n    constructor(platformId, renderer) {\n      this.platformId = platformId;\n      this.renderer = renderer;\n    }\n    ngAfterViewInit() {\n      if (isPlatformBrowser(this.platformId)) {\n        this.initFullpage();\n      }\n      if (isPlatformServer(this.platformId)) {\n        // server side code\n      }\n    }\n    initFullpage() {\n      console.log(\"fullpage\", fullpage);\n      this.fullpageApi = new fullpage('#' + this.id, this.options);\n      this.addBuildFunction();\n      this.ref.emit(this.fullpageApi);\n    }\n    addBuildFunction() {\n      this.fullpageApi.build = () => {\n        const activeSection = this.fullpageApi.getActiveSection();\n        const activeSlide = this.fullpageApi.getActiveSlide();\n        this.destroyFullpage();\n        if (activeSection) {\n          this.renderer.addClass(activeSection.item, 'active');\n        }\n        if (activeSlide) {\n          this.renderer.addClass(activeSlide.item, 'active');\n        }\n        this.initFullpage();\n      };\n    }\n    destroyFullpage() {\n      if (typeof this.fullpageApi !== 'undefined' && typeof this.fullpageApi.destroy !== 'undefined') {\n        this.fullpageApi.destroy('all');\n      }\n    }\n    ngOnDestroy() {\n      this.destroyFullpage();\n    }\n    /** @nocollapse */\n    static ɵfac = function FullpageDirective_Factory(t) {\n      return new (t || FullpageDirective)(i0.ɵɵdirectiveInject(PLATFORM_ID), i0.ɵɵdirectiveInject(i0.Renderer2));\n    };\n    /** @nocollapse */\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: FullpageDirective,\n      selectors: [[\"\", \"fullpage\", \"\"]],\n      inputs: {\n        id: \"id\",\n        options: \"options\"\n      },\n      outputs: {\n        ref: \"ref\"\n      }\n    });\n  }\n  return FullpageDirective;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet AnchorLinkDirective = /*#__PURE__*/(() => {\n  class AnchorLinkDirective {\n    href;\n    onClick(event) {\n      if (this.href.length > 0 && this.href[0] === '#') {\n        event.preventDefault();\n        window.location.hash = this.href;\n      }\n    }\n    /** @nocollapse */\n    static ɵfac = function AnchorLinkDirective_Factory(t) {\n      return new (t || AnchorLinkDirective)();\n    };\n    /** @nocollapse */\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: AnchorLinkDirective,\n      selectors: [[\"\", \"href\", \"\"]],\n      hostBindings: function AnchorLinkDirective_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"click\", function AnchorLinkDirective_click_HostBindingHandler($event) {\n            return ctx.onClick($event);\n          });\n        }\n      },\n      inputs: {\n        href: \"href\"\n      }\n    });\n  }\n  return AnchorLinkDirective;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet AngularFullpageModule = /*#__PURE__*/(() => {\n  class AngularFullpageModule {\n    /** @nocollapse */static ɵfac = function AngularFullpageModule_Factory(t) {\n      return new (t || AngularFullpageModule)();\n    };\n    /** @nocollapse */\n    static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: AngularFullpageModule\n    });\n    /** @nocollapse */\n    static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n  }\n  return AngularFullpageModule;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/*\n * Public API Surface of angular-fullpage\n */\n/// <reference path=\"./lib/fullpage.interface.ts\" />\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AnchorLinkDirective, AngularFullpageModule, FullpageDirective };\n//# sourceMappingURL=fullpage-angular-fullpage.mjs.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}